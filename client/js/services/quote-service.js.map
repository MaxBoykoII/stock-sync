{"version":3,"sources":["../../../development/js/services/quote-service.js"],"names":[],"mappings":"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","file":"quote-service.js","sourcesContent":["angular.module('StockSync')\n    .service('QuoteService', ['$http', '$q', '$rootScope', '$filter', function($http, $q, $rootScope, $filter) {\n        //[0] Initialize symbols array on rootScope and set up start and end dates.\n        //The end date is the current date; the start date is a year earlier.\n        Date.prototype.yyyymmdd = function() {\n            var yyyy = this.getUTCFullYear().toString();\n            var mm = (this.getUTCMonth() + 1).toString(); // getMonth() is zero-based\n            var dd = this.getUTCDate().toString();\n            return yyyy + '-' + (mm[1] ? mm : \"0\" + mm[0]) + '-' + (dd[1] ? dd : \"0\" + dd[0]); // padding\n        };\n        $rootScope.symbols = [];\n        var now = new Date(),\n            yesterday = new Date(+now - 24 * 3600 * 1000),\n            year_ago = new Date(+now - 365 * 24 * 3600 * 1000/2),\n            startDate = year_ago.yyyymmdd()||\"2009-09-11\",\n            endDate = yesterday.yyyymmdd() || \"2010-03-10\";\n        console.log(now);\n        console.log(year_ago.yyyymmdd());\n        console.log(yesterday.yyyymmdd());\n\n        //[1] Helper functions for managing tracked symbols;\n        this.showSymbols = function() {\n            return $rootScope.symbols;\n        };\n        this.register = function(symbol) {\n            $rootScope.symbols.push(symbol);\n        };\n        this.remove = function(symbol) {\n            _.remove($rootScope.symbols, function(sym) {\n                return sym === symbol;\n            });\n        };\n        //[2] Helper functions for this.fetch, defined here to avoid redefining them in for loop\n        function match(element) {\n            return element.Symbol === $rootScope.symbols[this];\n        }\n\n        function format(element) {\n            return {\n                \"Symbol\": element.Symbol,\n                \"Close\": parseFloat(element.Close),\n                \"Date\": new Date(element.Date)\n            };\n        }\n\n        function check(element, i, array) {\n            if (!element.length || element.length !== array[0].length) {\n                array.splice(i, 1);\n                alert('Not enough data available in this date range for ' + $rootScope.symbols[i] + '!');\n                $rootScope.symbols.splice(i, 1);\n            }\n        }\n\n        //[3] Main processing functions for interacting with server api\n        this.fetch = function() {\n            let deferred = $q.defer();\n\n            const selection = $rootScope.symbols.map(function(el) {\n                    el = '\"' + el.replace(/\"/g, '') + '\"';\n                    return el;\n                }).join(', '),\n                query = `select * from yahoo.finance.historicaldata where symbol in (${selection}) and startDate = \"${startDate}\" and endDate = \"${endDate}\"`;\n            console.log(query);\n            $http.get(`api/stocks?symbols=${query}`).then(function(res) {\n                var data = res.data.body.query.results.quote,\n                    quotesBySymbol = [];\n                for (var i = 0, l = $rootScope.symbols.length; i < l; i++) {\n                    quotesBySymbol.push(data.filter(match, i).map(format));\n                    quotesBySymbol.forEach(check);\n                    deferred.resolve({\n                        result: quotesBySymbol\n                    });\n                }\n            }, function() {\n                deferred.reject();\n            });\n            return deferred.promise;\n        };\n        this.search = function(search) {\n            var deferred = $q.defer();\n            $http.get('/api/stocks/' + search).then(function(res) {\n                deferred.resolve({\n                    results: res.data.results\n                }, function() {\n                    deferred.reject();\n                });\n            });\n            return deferred.promise;\n        };\n    }]);"]}