{"version":3,"sources":["../../../development/js/controllers/main.js"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,WAAf,EACK,UADL,CACgB,UADhB,EAC4B,CAAC,QAAD,EAAW,cAAX,EAA2B,IAA3B,EAAiC,UAAS,MAAT,EAAiB,YAAjB,EAA+B,EAA/B,EAAmC;;AAExF,WAAO,WAAP,GAAqB,EAArB;AACA,WAAO,WAAP,CAAmB,OAAnB,GAA6B;AACzB,4BAAoB,KADK;AAEzB,mBAAW,CAFc;AAGzB,8BAAsB,KAHG;AAIzB,4BAAoB;;AAJK,KAA7B;AAOA,WAAO,WAAP,CAAmB,IAAnB,GAA0B,EAA1B;AACA,WAAO,WAAP,CAAmB,IAAnB,GAA0B,iBAA1B;;;AAGA,aAAS,eAAT,CAAyB,UAAzB,EAAqC;AACjC,YAAI,OAAO,CAAC;AACR,kBAAM,MADE;AAER,qBAAS,MAFD;AAGR,oBAAQ;AAHA,SAAD,CAAX;AAKA,qBAAa,WAAb,GAA2B,OAA3B,CAAmC,UAAS,MAAT,EAAiB;AAChD,iBAAK,IAAL,CAAU;AACN,sBAAM,MADA;AAEN,yBAAS,MAFH;AAGN,wBAAQ;AAHF,aAAV;AAKH,SAND;AAOA,YAAI,OAAO,EAAX;;AAEA,iBAAS,SAAT,CAAmB,CAAnB,EAAsB;AAClB,gBAAI,MAAM;AACN,mBAAG,CAAC;AACA,uBAAG,WAAW,CAAX,EAAc,CAAd,EAAiB;AADpB,iBAAD;AADG,aAAV;AAKA,uBAAW,OAAX,CAAmB,UAAS,GAAT,EAAc;AAC7B,oBAAI,CAAJ,CAAM,IAAN,CAAW;AACP,uBAAG,IAAI,CAAJ,EAAO;AADH,iBAAX;AAGH,aAJD;;AAMA,mBAAO,GAAP;AAEH;;AAED,aAAK,IAAI,IAAI,CAAR,EAAW,IAAI,WAAW,CAAX,EAAc,MAAlC,EAA0C,IAAI,CAA9C,EAAiD,GAAjD,EAAsD;AAClD,iBAAK,IAAL,CAAU,UAAU,CAAV,CAAV;AACH;AACD,eAAO,WAAP,CAAmB,IAAnB,GAA0B;AACtB,oBAAQ,IADc;AAEtB,oBAAQ;AAFc,SAA1B;AAKH;;;AAGD,WAAO,YAAP,GAAsB,UAAS,IAAT,EAAe;AACjC,YAAI,aAAa,KAAK,GAAL,CAAS,UAAS,GAAT,EAAc;;AAEpC,mBAAO,IAAI,GAAJ,CAAQ,UAAS,EAAT,EAAa,CAAb,EAAgB,GAAhB,EAAqB;AAChC,oBAAI,IAAI,IAAI,MAAZ;oBACI,YAAY,IAAI,IAAI,CAAR,EAAW,KAD3B;;AAGA,uBAAO;AACH,8BAAU,GAAG,MADV;AAEH,6BAAS,WAAY,GAAG,KAAH,GAAW,SAAZ,GAAyB,GAApC,CAFN;AAGH,4BAAQ,IAAI,IAAJ,CAAS,GAAG,IAAZ;AAHL,iBAAP;AAKH,aATM,CAAP;AAUH,SAZgB,CAAjB;AAaA,wBAAgB,UAAhB;AACH,KAfD;;AAiBA,WAAO,QAAP,GAAkB,UAAS,eAAT,EAA0B;AACxC,YAAI,WAAW,GAAG,KAAH,EAAf;;AAEA,qBAAa,KAAb,GACK,IADL,CACU,UAAS,IAAT,EAAe;AACjB,4BAAgB,KAAK,MAArB;AACA,qBAAS,OAAT;AACH,SAJL,EAIO,YAAW;AACV,qBAAS,MAAT;AACH,SANL;AAOA,eAAO,SAAS,OAAhB;AACH,KAXD;AAYH,CArFuB,CAD5B","file":"main.js","sourcesContent":["angular.module('StockSync')\n    .controller('MainCtrl', ['$scope', 'QuoteService', '$q', function($scope, QuoteService, $q) {\n        //[1] Initialize chart variables\n        $scope.chartObject = {};\n        $scope.chartObject.options = {\n            displayAnnotations: false,\n            thickness: 2,\n            displayRangeSelector: false,\n            displayZoomButtons: false\n\n        };\n        $scope.chartObject.data = {};\n        $scope.chartObject.type = \"AnnotationChart\";\n\n        //[2] Helper function for row and column creation\n        function rowAndColCreate(scaledData) {\n            var cols = [{\n                \"id\": \"date\",\n                \"label\": \"Date\",\n                \"type\": \"date\"\n            }];\n            QuoteService.showSymbols().forEach(function(symbol) {\n                cols.push({\n                    \"id\": symbol,\n                    \"label\": symbol,\n                    \"type\": \"number\"\n                });\n            });\n            var rows = [];\n\n            function rowCreate(i) {\n                var row = {\n                    c: [{\n                        v: scaledData[0][i].Date\n                    }]\n                };\n                scaledData.forEach(function(arr) {\n                    row.c.push({\n                        v: arr[i].Close\n                    });\n                });\n\n                return row;\n\n            }\n\n            for (var i = 0, l = scaledData[0].length; i < l; i++) {\n                rows.push(rowCreate(i));\n            }\n            $scope.chartObject.data = {\n                \"cols\": cols,\n                \"rows\": rows\n            };\n\n        }\n\n        //[3] scaling functions for scaling data from QuoteService\n        $scope.scalebyStart = function(data) {\n            var scaledData = data.map(function(arr) {\n\n                return arr.map(function(el, i, arr) {\n                    var l = arr.length,\n                        lastClose = arr[l - 1].Close;\n\n                    return {\n                        \"Symbol\": el.Symbol,\n                        \"Close\": parseFloat((el.Close / lastClose) * 100),\n                        \"Date\": new Date(el.Date)\n                    };\n                });\n            });\n            rowAndColCreate(scaledData);\n        };\n        //[4] function to generate rows and columns using scaled data\n        $scope.generate = function(scalingFunction) {\n            var deferred = $q.defer();\n\n            QuoteService.fetch()\n                .then(function(data) {\n                    scalingFunction(data.result);\n                    deferred.resolve();\n                }, function() {\n                    deferred.reject();\n                });\n            return deferred.promise;\n        };\n    }]);"]}