{"version":3,"sources":["../../../development/js/controllers/symbol.js"],"names":[],"mappings":";;AAAA,QAAQ,MAAR,CAAe,WAAf,EACK,UADL,CACgB,YADhB,EAC8B,CAAC,QAAD,EAAW,cAAX,EAA2B,aAA3B,EAA0C,UAAS,MAAT,EAAiB,YAAjB,EAA+B,WAA/B,EAA4C;;AAE5G,gBAAY,EAAZ,CAAe,MAAf,EAAuB,UAAS,IAAT,EAAe;AAClC,aAAK,OAAL,CAAa,OAAb,CAAqB,UAAS,GAAT,EAAc;AAC/B,yBAAa,QAAb,CAAsB,GAAtB;AACH,SAFD;AAGA,eAAO,QAAP,CAAgB,OAAO,YAAvB;AACH,KALD;;AAOA,gBAAY,EAAZ,CAAe,OAAf,EAAwB,UAAS,IAAT,EAAe;;AAEnC,qBAAa,QAAb,CAAsB,KAAK,MAA3B;AACA,eAAO,QAAP,CAAgB,OAAO,YAAvB;AAEH,KALD;;;AAQA,WAAO,MAAP,GAAgB,EAAhB;AACA,WAAO,MAAP,CAAc,IAAd,GAAqB,EAArB;AACA,WAAO,MAAP,CAAc,OAAd,GAAwB,EAAxB;AACC,WAAO,MAAP,CAAc,aAAd,EAA6B,UAAS,QAAT,EAAmB;AAC7C,qBAAa,MAAb,CAAoB,QAApB,EAA8B,IAA9B,CAAmC,UAAS,QAAT,EAAmB;AAClD,mBAAO,MAAP,CAAc,OAAd,GAAwB,SAAS,OAAjC;AACH,SAFD;AAGH,KAJA;;;;;AASD,WAAO,QAAP,GAAkB,UAAS,MAAT,EAAiB;AAC/B,YAAI,SAAS,aAAa,WAAb,GAA2B,MAAxC;;AAEA,YAAI,aAAa,WAAb,GAA2B,OAA3B,CAAmC,MAAnC,MAA+C,CAAC,CAApD,EAAuD;AACnD,oBAAQ,GAAR,CAAY,MAAZ;AACA,yBAAa,QAAb,CAAsB,MAAtB;AACA,mBAAO,QAAP,CAAgB,OAAO,YAAvB,EAAqC,IAArC,CAA0C,YAAW;;;AAGjD,oBAAI,WAAW,aAAa,WAAb,GAA2B,MAA1C,EAAkD;AAC9C,gCAAY,IAAZ,CAAiB,OAAjB,EAA0B;AACtB,gCAAQ;AADc,qBAA1B;AAGH;AACJ,aARD;AASH;AACJ,KAhBD;AAiBH,CA9CyB,CAD9B","file":"symbol.js","sourcesContent":["angular.module('StockSync')\n    .controller('SymbolCtrl', ['$scope', 'QuoteService', 'stockSocket', function($scope, QuoteService, stockSocket) {\n       //[1] Push symbols received from server on 'join' event\n        stockSocket.on('join', function(data) {\n            data.symbols.forEach(function(sym) {\n                QuoteService.register(sym);\n            });\n            $scope.generate($scope.scalebyStart);\n        });\n        //[2] On 'stock' event, register new symbol and update view\n        stockSocket.on('stock', function(data) {\n\n            QuoteService.register(data.symbol);\n            $scope.generate($scope.scalebyStart);\n\n        });\n        \n        //[3] Set up search object for handling user searches on symbols.\n        $scope.search = {};\n        $scope.search.text = \"\";\n        $scope.search.results = [];\n         $scope.$watch('search.text', function(newValue) {\n            QuoteService.search(newValue).then(function(response) {\n                $scope.search.results = response.results;\n            });\n        });\n        \n        //[4] Register handles adding new symbols; trigged when user clicks on search result.\n        //The idea is try to add the symbol locally (not possible if there is no data for the symbol in the range),\n        // and, if this can be done, push the symbol to server.\n        $scope.register = function(symbol) {\n            var before = QuoteService.showSymbols().length;\n\n            if (QuoteService.showSymbols().indexOf(symbol) === -1) {\n                console.log(before);\n                QuoteService.register(symbol);\n                $scope.generate($scope.scalebyStart).then(function() {\n                    //don't send symbol to array on server if it was removed from symbols array\n                    //on account of missing data\n                    if (before !== QuoteService.showSymbols().length) {\n                        stockSocket.emit('stock', {\n                            symbol: symbol\n                        });\n                    }\n                });\n            }\n        };\n    }]);"]}